/// Colors set out for all apps at the acc
/// $acc-blue, $scrub-green, $scrub-blue outlined in sapien color guidelines
/// $black is used for all text gives a softness and warmth to all designs
/// $real-black is 100% black used for grey conversions
/// @group configuration
/// @access static
/// @type color
$acc-blue:#00386b;
$scrub-blue:#198dae;
$scrub-green:#14B057;
$scrub-purple:#7d5891;
$black:#222;
$real-black:#000;
$error-red:#c32231;
$warning-orange:#E08514;//d07600


/// fontcolor() is a color converter for colors that are passed into it
/// @group helper
/// @access public
/// @required hex
/// @options $value for normal, quiet, loud
/// @default $value normal
/// @return hex color

@function fontcolor($value, $option:""){
	$color:$value;
	@if $option == "xloud"{
		$color:mix($value, $real-black,20%);
	}
	@if $option == "loud"{
		$color:scale-color($value, $lightness:shift(100));
	}
	@elseif $option == "quiet"{
		$color:scale-color($value, $lightness:shift(60));
	}
	@elseif $option == "light"{
		$color:scale-color($value, $lightness:shift(40));
	}
	@elseif $option == "normal"{
		$color:scale-color($value, $lightness:shift(80));
	}
	@else{$color:scale-color($value, $lightness:shift(80));}
	@return $color;
}


/// grey() is a color conversion of grey to convert % of $black
/// @group helper
/// @access public
/// @required number value 1 - 100
/// @return hex color  
@function grey($value){
	// $grey:scale-color($real-black,$lightness:shift($value));
	// @return $grey;
	$grey:color($real-black,$value);
	@return $grey;
}
@function color($color,$value){
	$newColor:scale-color($color,$lightness:shift($value));
	@return $newColor;

}
/// shift()
/// @group helper
/// @access private
/// @required number value 1-100
/// @returns percentage from -100% to 100%
@function shift($value){
	$shift:100% - percentage($value / 100);
	@return $shift;
}



// Calculeate brightness of a given color.
@function brightness($color) {
  @return ((red($color) * .299) + (green($color) * .587) + (blue($color) * .114)) / 255 * 100%;
}

// Compares contrast of a given color to the light/dark arguments and returns whichever is most "contrasty"
@function color-contrast($color, $dark: $global-default-dark-text, $light: $global-default-light-text) {
  @if $color == null {
    @return null;
  }
  @else {
    $color-brightness: brightness($color);  
    $light-text-brightness: brightness($light);
    $dark-text-brightness: brightness($dark);
    
    @return if(abs($color-brightness - $light-text-brightness) > abs($color-brightness - $dark-text-brightness), $light, $dark);  
  }
}

$font-strong-black:fontcolor($real-black,'loud');
$font-black:fontcolor($real-black);
$link-color:fontcolor($scrub-blue);
$font-light:fontcolor($real-black,'light');


$global-default-dark-text: $font-black !default;
$global-default-light-text:#fff !default;
/// Color transistion to zurb naming convetion
$product-brand-color:#008080 !default;
$brand-color:$acc-blue !default;
$primary-color: $scrub-blue !default;
$secondary-color: grey(30) !default;
$tertiary-color:$scrub-purple !default;
$attention-color: $warning-orange !default;
$select-color: $scrub-green !default;
$success-color: $scrub-green !default;
$warning-color: $warning-orange !default;
$error-color: $error-red !default;
$alert-color: $error-red !default;
$info-color: #22AFD7 !default;



